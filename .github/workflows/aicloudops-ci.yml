name: AICloudOps - CI

on:
  workflow_dispatch:
  push:
    branches:
    - main
    paths:
    - aicloudops/chatbot/**
    - aicloudops/logger/**
  pull_request:
    branches:
    - main
    paths:
    - aicloudops/chatbot/**
    - aicloudops/logger/**

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      microservices: ${{ steps.filter.outputs.changes }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Detect Changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          chatbot: aicloudops/chatbot/**
          logger: aicloudops/logger/**

    # upload artifact to be used by the CD workflow
    - name: Output Changes to JSON File
      run: |
        echo "${{ steps.filter.outputs.changes }}" > changes.json

    - name: Upload Changes Artifact
      uses: actions/upload-artifact@v4
      with:
        name: aicloudops-detected-changes-${{ github.sha }}
        path: changes.json

  lint-format-check:
    name: Lint And Format Check
    runs-on: ubuntu-latest
    needs: [detect-changes]
    strategy:
      matrix:
        microservice: ${{ fromJSON(needs.detect-changes.outputs.microservices) }}
    defaults:
      run:
        working-directory: aicloudops/${{ matrix.microservice }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
        # cache: 'pip'

    - name: Cache Python Packages
      uses: actions/cache@v4
      with:
        path: ${{ env.pythonLocation }} # cache the python location instead of just the .whl files for even faster installs
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt


    # format check w/ ruff but dont make the changes
    - name: Format with Ruff
      uses: chartboost/ruff-action@v1
      with:
        src: 'aicloudops/${{ matrix.microservice }}/src'
        args: 'format --check'
        # continue-on-error: true

    # lint check w/ ruff but dont make the changes
    - name: Lint with Ruff
      uses: chartboost/ruff-action@v1
      with:
        src: 'aicloudops/${{ matrix.microservice }}/src'
        # continue-on-error: true


  unit-tests:
    name: PyTest
    runs-on: ubuntu-latest
    needs: detect-changes
    strategy:
      matrix:
        microservice: ${{ fromJSON(needs.detect-changes.outputs.microservices) }}
    defaults:
      run:
        working-directory: aicloudops/${{ matrix.microservice }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

  #   - name: Set up Python
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: '3.10'

  #   # - name: Cache Python packages
  #   #   uses: actions/cache@v2
  #   #   with:
  #   #     path: ~/.cache/pip
  #   #     key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
  #   #     restore-keys: |
  #   #       ${{ runner.os }}-pip-

  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r requirements.txt

  #   - name: Run Tests
  #     run: pytest --cov=./ --cov-report=xml

  #   - name: Upload Test Coverage
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: test-coverage-report
  #       path: coverage.xml
  #     if: ${{ always() }} # always run this line even if tests fail

